name: Checks
run-name: ${{ gitea.actor }} is running checks ðŸš€
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23]
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      # No point in having nextjs cache since it takes longer to calculate hashes.
      # - uses: actions/cache@v4
      #   with:
      #     # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
      #     path: |
      #       ${{ github.workspace }}/.next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx', '!**/node_modules') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # - name: Run linting
      #   run: pnpm lint

      # - name: Run type checking
      #   run: pnpm type-check

      - name: Build project
        run: pnpm build
